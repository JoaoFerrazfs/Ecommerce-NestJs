{{> admin-navbar }}

<div class="container mt-4">
  <section id="conteudos">
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h2 class="mb-0">Lista de Módulos</h2>
      <a href="/admin/modules/create" class="btn btn-info btn-sm">Criar um Módulo</a>
    </div>

    <table class="table table-bordered" id="content-table">
      <thead>
      <tr>
        <th>ID</th>
        <th>Nome</th>
      </tr>
      </thead>
      <tbody id="modules-list">
      </tbody>
    </table>
  </section>
</div>

{{> admin-footer }}

<script>
  // Função principal para inicializar a página
  document.addEventListener('DOMContentLoaded', () => {
    loadContents();
    initDeleteButtons();
  });

  // Carrega os conteúdos da API
  async function loadContents() {
    try {
      const response = await fetch(`${window.location.origin}/api/modules`);
      if (!response.ok) {
        throw new Error('Erro ao carregar os módulos');
      }
      const data = await response.json();
      renderModules(data.data);
    } catch (error) {
      console.error('Erro:', error);
      alert('Falha ao carregar os módules.');
    }
  }

  // Renderiza os conteúdos na tabela
  function renderModules(modules) {
    const contentList = document.getElementById('modules-list');
    contentList.innerHTML = '';

    modules.forEach(module => {
      const row = document.createElement('tr');
      row.setAttribute('data-id', module._id);

      // Coluna ID
      const idCell = document.createElement('td');
      idCell.className = 'd-flex justify-content-center align-items-center';
      idCell.textContent = module._id;
      row.appendChild(idCell);

      // Coluna Título
      const titleCell = document.createElement('td');
      titleCell.textContent = module.name;
      row.appendChild(titleCell);

      // Coluna Ações
      const actionsCell = document.createElement('td');
      actionsCell.className = 'd-flex justify-content-center align-items-center';
      const editButton = document.createElement('button');
      editButton.className = 'btn btn-warning btn-sm';
      editButton.textContent = 'Editar';
      editButton.onclick = () => window.location.href = `/admin/modules/edit/${module._id}`;

      editButton.style.marginRight = '10px';

      const deleteButton = document.createElement('button');
      deleteButton.className = 'btn btn-danger btn-sm delete-btn';
      deleteButton.textContent = 'Excluir';
      deleteButton.onclick = () => handleDelete(module._id, row);

      actionsCell.appendChild(editButton);
      actionsCell.appendChild(deleteButton);
      row.appendChild(actionsCell);

      contentList.appendChild(row);
    });
  }

  // Lógica para lidar com exclusão
  function handleDelete(modulesId, row) {
    if (confirm('Tem certeza que deseja excluir este conteúdo?')) {
      deleteModule(modulesId)
        .then(() => {
          row.remove();
          alert('Conteúdo excluído com sucesso!');
        })
        .catch(error => {
          console.error('Erro:', error);
          alert('Falha ao excluir o conteúdo. Tente novamente.');
        });
    }
  }

  // Faz a requisição DELETE para a API
  async function deleteModule(modulesId) {
    const response = await fetch(`${window.location.origin}/api/modules/${modulesId}`, {
      method: 'DELETE',
    });

    if (!response.ok) {
      const errorMessage = await response.text();
      throw new Error(errorMessage || 'Erro ao excluir o módulo.');
    }
  }
</script>
